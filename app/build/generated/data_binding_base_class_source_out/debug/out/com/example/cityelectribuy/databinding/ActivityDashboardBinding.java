// Generated by view binder compiler. Do not edit!
package com.example.cityelectribuy.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.cityelectribuy.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityDashboardBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final CardView mCardAddDivices;

  @NonNull
  public final CardView mCardViewDivices;

  @NonNull
  public final CardView searchcardview;

  @NonNull
  public final CardView settingcardview;

  @NonNull
  public final LinearLayout topView;

  private ActivityDashboardBinding(@NonNull RelativeLayout rootView,
      @NonNull CardView mCardAddDivices, @NonNull CardView mCardViewDivices,
      @NonNull CardView searchcardview, @NonNull CardView settingcardview,
      @NonNull LinearLayout topView) {
    this.rootView = rootView;
    this.mCardAddDivices = mCardAddDivices;
    this.mCardViewDivices = mCardViewDivices;
    this.searchcardview = searchcardview;
    this.settingcardview = settingcardview;
    this.topView = topView;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityDashboardBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityDashboardBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_dashboard, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityDashboardBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.mCardAddDivices;
      CardView mCardAddDivices = ViewBindings.findChildViewById(rootView, id);
      if (mCardAddDivices == null) {
        break missingId;
      }

      id = R.id.mCardViewDivices;
      CardView mCardViewDivices = ViewBindings.findChildViewById(rootView, id);
      if (mCardViewDivices == null) {
        break missingId;
      }

      id = R.id.searchcardview;
      CardView searchcardview = ViewBindings.findChildViewById(rootView, id);
      if (searchcardview == null) {
        break missingId;
      }

      id = R.id.settingcardview;
      CardView settingcardview = ViewBindings.findChildViewById(rootView, id);
      if (settingcardview == null) {
        break missingId;
      }

      id = R.id.top_view;
      LinearLayout topView = ViewBindings.findChildViewById(rootView, id);
      if (topView == null) {
        break missingId;
      }

      return new ActivityDashboardBinding((RelativeLayout) rootView, mCardAddDivices,
          mCardViewDivices, searchcardview, settingcardview, topView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
